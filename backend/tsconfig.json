{
  "compilerOptions": {
    /* Basic Options */
    // Specify ECMAScript target version: ES5, ES6/ES2015, ES2020, etc.
    "target": "ES2023",

    // Node.js uses commonjs module system.
    "module": "commonjs",

    // Specify library files to include in the compilation.
    "lib": ["ES2023"],

    // Allow JavaScript files to be compiled.
    "allowJs": true,

    // Redirect output structure to the "dist" directory.
    "outDir": "./dist",

    // Specify the root directory of input files.
    "rootDir": "./",

    // Enable all strict type-checking options.
    "strict": true,

    /* Module Resolution Options */
    // Use Node.js module resolution strategy.
    "moduleResolution": "node",

    // Enable interop between CommonJS and ES6 modules.
    "esModuleInterop": true,

    // Ensure consistent casing in module imports.
    "forceConsistentCasingInFileNames": true,

    // Skip type checking of declaration files.
    "skipLibCheck": true,

    /* Source Map Options */
    // Generates corresponding .map files.
    "sourceMap": true,

    /* Type Checking */
    // Raise error on expressions and declarations with an implied 'any' type.
    "noImplicitAny": true,

    // Ensure strict null checks.
    "strictNullChecks": true,

    // Ensure that functions have the correct parameter and return types.
    "strictFunctionTypes": true,

    // Ensure strict checking of `bind`, `call`, and `apply`.
    "strictBindCallApply": true,

    // Ensure class properties are initialized correctly.
    "strictPropertyInitialization": true,

    // Ensure `this` is correctly typed in functions.
    "noImplicitThis": true,

    // Always emit "use strict" for each source file.
    "alwaysStrict": true,

    /* Additional Options */
    // Include modules imported with `.json` extension.
    "resolveJsonModule": true,

    // Ensure each file can be transpiled without depending on other files.
    "isolatedModules": true,

    // Report errors on unused locals.
    "noUnusedLocals": true,

    // Report errors on unused parameters.
    "noUnusedParameters": true,

    // Report errors for fallthrough cases in switch statements.
    "noFallthroughCasesInSwitch": true,

    // Report errors when not all code paths in a function return a value.
    "noImplicitReturns": true,

    "inlineSources": true,

    // Set `sourceRoot` to  "/" to strip the build path prefix
    // from generated source code references.
    // This improves issue grouping in Sentry.
    "sourceRoot": "/"
  },
  "include": ["./**/*.ts", "index.ts", "knexfile.ts"], // Include all TypeScript files in the "src" folder.
  "exclude": ["node_modules", "dist"] // Exclude "node_modules" and output directory.
}
